'use strict';

const btn = document.querySelector('.btn-country');
const countriesContainer = document.querySelector('.countries');

///////////////////////////////////////


console.log("hi i am ayush mendiratta");
const rendercalls=function(data){
    const html=
`<article class="country">
    <img class="country__img" src=${data.flags.png} />
    <div class="country__data">
    <h3 class="country__name">${data.name.common}</h3>
      <h4 class="country__region">${data.region}</h4>
      <p class="country__row"><span>üë´</span>${(+data.population/1000000).toFixed(1)}M</p>
      <p class="country__row"><span>üó£Ô∏è</span>${data.languages}</p>
      <p class="country__row"><span>üí∞</span>${data.currencies}</p>
      
    </div>
</article>`;
countriesContainer.insertAdjacentHTML('beforeend',html);
countriesContainer.style.opacity=1;
}
/*
//USING API CALLS 
const getcountrydata=function(countryname){
//ajax call countery 1
const request=new XMLHttpRequest();
//this link is an public api link
request.open('GET',`https://restcountries.com/v3.1/name/${countryname}`);
//sending request to an api
request.send();
request.addEventListener('load',function(){
    //have to learn this
    const [data]=JSON.parse(this.responseText);
    console.log(data);
 rendercalls(data);

//get neighbour countery
//nesting of api calls
//nested call backs
const [neighbour]=data.borders;
if(!neighbour) return;

const request2=new XMLHttpRequest();
request2.open('GET',`https://restcountries.com/v3.1/alpha/${neighbour}`);
request2.send();

request2.addEventListener('load',function(){
    //have to learn this
    const [data2]=JSON.parse(this.responseText);
    console.log(data2);
rendercalls(data2);
    
})   ;
})
};

getcountrydata("pakistan");
//known as callback hell
//what we have done upper
setTimeout(()=>{
    console.log('after 1 second');
    setTimeout(()=>{
        console.log('after 2 second');
        setTimeout(()=>{
            console.log('after 3 second');
            setTimeout(()=>{
                console.log('after 4 second')
            },1000)
        },1000)
    },1000)
},1000)
*/
/*
const request=new XMLHttpRequest();
//this link is an public api link
request.open('GET',`https://restcountries.com/v3.1/name/${countryname}`);
//sending request to an api
request.send();*/

const rendererr=function(mssg){
countriesContainer.insertAdjacentText('beforeend',mssg);
countriesContainer.style.opacity=1;
}

//replacing xmlhttprequest with promises and fetch

const request=fetch('https://restcountries.com/v3.1/name/portugal');
console.log(request);
//then keyword handles the promise generated by the fetch keyword
const getcountryname=function(name){
    fetch(`https://restcountries.com/v3.1/name/${name}`) /*this then contains the data from the web api*/.then(function(response){
       console.log(response);
     return  response.json();
       
    }).then(function(data){//again handling a new promise generated by this response.json
        console.log(data);
        rendercalls(data[0]);

        const neighbour=data[0].borders[0];
        if(!neighbour) return;

        return fetch(`https://restcountries.com/v3.1/alpha/${neighbour}`);

    })
    .then(response=>response.json())
    .then(data=>rendercalls(data[0]))
    //this catch handles the error
    .catch(err=>{console.error(`heres your error ${err}`)
    rendererr(`something went wrong ${err}`) ;
});
//ther's also a finally keyword for handling result from promises wethere it is successfull or not .finally(()=>{})

};
btn.addEventListener('click',function(){
   // getcountryname('dsdsdd');
    console.log('i love you');
})


//handing of rejection send by web api when we uses fetch and promises keyword
//using a catch keyword

//coding challenge-1
/*
const whereAmI=function(lat,lng){
    fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`).then(function(response){
        console.log(response);
       return response.json();
    })
    //these then are handling the result send by fetch keyword whih is also called as promises
.then(function(data){
    console.log(data);
    console.log(`you are in ${data.city},  ${data.country}`);
    return fetch(`https://restcountries.com/v3.1/name/${data.country}`);
    
}).then(function(res){
 //manually throwing the erroe
 if(!res.ok) throw new Error(`problem with geocoding ${res.status}`);
 return res.json()})
 .then(function(data){
    rendercalls(data[0]);
 })
}

whereAmI(52.508,13.381);
*/
//using a promise keyword

const lottery=new Promise(function(resolved,rejected){
    setTimeout(function(){
    if(Math.random()>0.5)
    resolved('you win');
    else{
        rejected('you loose');
    }

},3000)});

lottery.then(res=>{
    console.log(res);
})
.catch(err=>console.log(err));

navigator.geolocation.getCurrentPosition(position=>console.log(position),
err=>console.error(err));


const item=document.createElement('img');
//coding challenge-2
const createimage=function(imgpath){
    return new Promise(function(resolve,reject){
        const image=document.querySelector('.images');
        item.src=imgpath;

        img.addEventListener('load',function(){
           image.append(img);
            resolve(img);
        
        });
        img.addEventListener('error',function(){
           
             reject(new Error('image not found'));
    });
  
   
});
};
createimage('C:\Users\ayush\Downloads\ayush profile.jpg').then(img => {
console.log(img);
  
})
.catch(err=>console.log(`image not found${err}`));



const lotteryy=new Promise(function(resolv,error){
        resolv("i love you");
        error("i hate you");
    });
    lotteryy.then(function(res){
     console.log(res);
    })
  
    //async and await
    /*
    const whereAmI=function(lat,lng){
        fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`).then(function(response){
            console.log(response);
           return response.json();
        })
        //these then are handling the result send by fetch keyword whih is also called as promises
    .then(function(data){
        console.log(data);
        console.log(`you are in ${data.city},  ${data.country}`);
        return fetch(`https://restcountries.com/v3.1/name/${data.country}`);
        
    }).then(function(res){
     //manually throwing the erroe
     if(!res.ok) throw new Error(`problem with geocoding ${res.status}`);
     return res.json()})
     .then(function(data){
        rendercalls(data[0]);
     })
    }
    
    whereAmI(52.508,13.381);*/ //converting this promises handling with async and await

    const whereAmI= async function(lat,lng){
       const resolve= await fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`);

       const data=await resolve.json();
       console.log(data);
       console.log(`your country name is ${data.country} and city name is ${data.city}`);

       const res=await fetch(`https://restcountries.com/v3.1/name/${data.country}`);

       const data2= await res.json();
       rendercalls(data2[0]);
    }
 
    btn.addEventListener('click',function(){
        whereAmI(52.508,13.381);
        console.log('i love you');
    })

const getjson=async function(url){
    const res=await fetch(url);
        const data=await res.json();
        console.log(data[0]);
        
    };
    
  getjson('https://restcountries.com/v3.1/name/portugal')

    const get3cityname=async function(c1,c2,c3){
        try{
     const [data1]= await getjson(`https://restcountries.com/v3.1/name/${c1}}`);
     const [data2]= await getjson(`https://restcountries.com/v3.1/name/${c2}`);
     const [data3]= await getjson(`https://restcountries.com/v3.1/name/${c3}`);

     console.log(data1.capital,data2.capital,data3.capital);
        }
        catch(err){
            console.error(`${err}`);
        }

    };

    get3cityname('portugal','pakistan','usa');